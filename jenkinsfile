pipeline {
    agent any 
    stages {
        stage('terraform'){
            steps{
                withCredentials([
                string(credentialsId: 'aws_access_key_id', variable: 'AWS_ACCESS_KEY_ID'),
                string(credentialsId: 'aws_secret_access_key', variable: 'AWS_SECRET_ACCESS_KEY')
                ]){
                dir("${env.WORKSPACE}/terraform/"){
                    sh '''
                    terraform init   -reconfigure
                    terraform apply  -var-file dev.tfvars -auto-approve
                    bastion_ip=`terraform output -json bastion-ip | tr -d '"'`
                    private_ip=`terraform output -json private-ip | tr -d '"'`
                    '''
                }
                
                }
            }
        }
        
        stage('Ansible') {
            steps {
                dir("${env.WORKSPACE}/scripts/"){
                    sh '. ./jumphost.sh'
                }
                dir("${env.WORKSPACE}/ansible-slave/"){
                    sh 'ansible-playbook -i inventory --private-key terraform/key-pair.pem slave-playbook.yaml'  
                }
            }
        }
    }

}